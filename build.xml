<?xml version="1.0" encoding="UTF-8"?>
<project name="EsendexSDK" default="test" phingVersion="2.4.2">
    <target name="check-access"
            description="Validate your credentials">
        <input propertyName="username" message="Esendex Username " promptChar="?"/>
        <input propertyName="password" message="Esendex Password " promptChar="?"/>
        <input propertyName="reference" message="Account Reference" promptChar="?"/>
        <check-access username="${username}" password="${password}" reference="${reference}"/>
    </target>

    <target name="test"
            depends="prepare"
            description="Run all the tests">
        <exec executable="./vendor/bin/phpunit" dir="." checkreturn="true" logoutput="true">
            <arg line="--log-junit"/>
            <arg file="./build/TestResult.xml"/>
            <arg line="./test/"/>
        </exec>
    </target>

    <target name="package"
            depends="build"
            description="Package build output">
        <load-version prefix="versions"/>

        <echo message="Creating packages..."/>

        <copy todir="./build/src">
            <fileset dir="./build/Esendex">
                <include name="**"/>
            </fileset>
        </copy>
        <delete dir="./build/Esendex" includeemptydirs="true" failonerror="true"/>
        <property name="gzip.file" value="esendex-php-sdk-${versions.version}.tgz"/>
        <tar destfile="./build/${gzip.file}" prefix="esendex-php-sdk" compression="gzip">
            <fileset dir="./build">
                <include name="**"/>
                <exclude name="TestResult.xml"/>
                <exclude name="pear/**"/>
            </fileset>
        </tar>
        <move file="./build/${gzip.file}" tofile="./build/gzip/${gzip.file}"/>

        <echo message="Files copied and compressed in build directory OK!"/>

        <echo message="Tidying up build directory"/>

        <delete includeemptydirs="true">
            <fileset dir="./build">
                <include name="**"/>
                <exclude name="gzip/**"/>
                <exclude name="pear/**"/>
                <exclude name="TestResult.xml"/>
            </fileset>
        </delete>
        
        <exec executable="git" dir="./build" checkreturn="true">
            <arg line="rev-parse HEAD >version.info"/>
        </exec>
    </target>

    <target name="prepare">
        <delete dir="./build"/>
        <echo message="Making directory ./build"/>
        <mkdir dir="./build"/>
    </target>

    <target name="build" depends="test">
        <copy todir="./build/">
            <fileset dir="./">
                <include name="test/**"/>
                <exclude name="*"/>
            </fileset>
            <filelist dir="./" files="build.xml,composer.json,LICENSE"/>
        </copy>
        <mkdir dir="./build/Esendex"/>
        <copy todir="./build/Esendex">
            <fileset dir="./src">
                <include name="**"/>
            </fileset>
        </copy>
    </target>

    <adhoc-task name="load-version">
        <![CDATA[
                use Phing\Task;

                class LoadVersionTask extends Task
                {
                    private $prefix = "version";

                    function setPrefix($prefix)
                    {
                        $this->prefix = $prefix;
                    }

                    function init()
                    {
                        require_once $this->project->getProperty("project.basedir") . "/vendor/autoload.php";
                    }

                    function main()
                    {
                        $this->project->setProperty($this->prefix . ".version",
                                                    \Esendex\Model\Api::getVersion());
                        $this->project->setProperty($this->prefix . ".apiversion",
                                                    \Esendex\Model\Api::getApiVersion());
                    }
                }
        ]]>
    </adhoc-task>

    <adhoc-task name="check-access">
        <![CDATA[
                use Phing\Task;

                class CheckAccessTask extends Task
                {
                    private $username;
                    private $password;
                    private $reference;

                    function setUsername($value)
                    {
                        $this->username = (string)$value;
                    }

                    function setPassword($value)
                    {
                        $this->password = (string)$value;
                    }

                    function setReference($value)
                    {
                        $this->reference = (string)$value;
                    }

                    function init()
                    {
                        require_once $this->project->getProperty("project.basedir") . "/vendor/autoload.php";
                    }

                    function main()
                    {
                        if (strlen($this->username) == 0 ||
                            strlen($this->password) == 0 ||
                            strlen($this->reference) == 0) {
                            print "\n\tCould not check access, need to provide Username, Password and Account Reference\n";
                            return;
                        }
                        $service = new \Esendex\CheckAccessService();
                        if ($service->checkAccess($this->reference, $this->username, $this->password)) {
                            print "\n\tAccount credentials OK!\n";
                            return;
                        }
                        print "\n\tCould not validate your credentials, check your input and retry\n";
                    }
                }
        ]]>
    </adhoc-task>
</project>